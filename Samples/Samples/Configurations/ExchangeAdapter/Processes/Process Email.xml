<?xml version="1.0"?>
<ESBMessagePipelineStorage xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>9609f024-b0e7-490f-a867-de8242f2084e</Id>
  <Version>1ac1f70e-4893-4078-ba57-bf42b7cba898</Version>
  <BusinessFlows />
  <Description />
  <Name>Process Email</Name>
  <IsSystemObject>false</IsSystemObject>
  <IsEncrypted>true</IsEncrypted>
  <PipelineBlob>&lt;ESBMessagePipeline xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.neuronesb.com/pipelines/"&gt;&lt;Category i:nil="true" /&gt;&lt;Description i:nil="true" /&gt;&lt;GlobalProperties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Name&gt;Process Email&lt;/Name&gt;&lt;Properties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;ReferencedAssemblies xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" /&gt;&lt;Steps&gt;&lt;ESBMessagePipelineStep i:type="ExceptionPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d4p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Exception&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;Catch&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessagePipelineExecutionPipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Process Exceptions&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;d6p1:FileName i:nil="true" /&gt;&lt;d6p1:PipelineName&gt;Exception Handling&lt;/d6p1:PipelineName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Catch&gt;&lt;Finally&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep i:type="CancelPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Stop Process&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Finally&gt;&lt;Try&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep i:type="ESBMessageCodePipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Get Attachments&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;BreakPointLines xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;Neuron.Esb.Mail.EmailMessage email = Neuron.Esb.Mail.EmailMessage.Deserialize(context.Data.InternalBytes);

// Set the body of the ESB message to the body of the email
context.Data.Body = email.Body;

//Check for invalid characters in the subject of the email before setting the target filename
System.Text.RegularExpressions.Regex InvalidFileRegex = new System.Text.RegularExpressions.Regex(
	string.Format("[{0}]", System.Text.RegularExpressions.Regex.Escape(@"&amp;lt;&amp;gt;:""/\|?*")));
string emailSubject = InvalidFileRegex.Replace(email.Subject, string.Empty);

// Set the target filename to the subject of the email
context.Data.SetProperty("file_out", "Name", emailSubject);

// Get the collection of attachments that are contained in the email
context.Properties.Add("EmailAttachments", email.Attachments);

// If you don't want to use the for-each Process Step, you can loop through the attachments and write to the file system:
//foreach(Neuron.Esb.Mail.Attachment a in email.Attachments)
//{
//		System.IO.File.WriteAllBytes(@"C:\_Neuron User Group\Demo\Output\" + a.Name,a.Content); 
//}
&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d7p1:string&gt;mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Esb, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Text.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d7p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Type40069419b0746b9a6ad30fac6d9224&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessagePublishPipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Publish&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;d6p1:Semantic&gt;Multicast&lt;/d6p1:Semantic&gt;&lt;d6p1:TopicSelector i:type="d6p1:ESBMessageConstTopicSelector"&gt;&lt;d6p1:Topic&gt;Email&lt;/d6p1:Topic&gt;&lt;/d6p1:TopicSelector&gt;&lt;d6p1:_timeout&gt;0&lt;/d6p1:_timeout&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep i:type="ForEachPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;ForEach&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep i:type="ESBMessageCodePipelineStep"&gt;&lt;Bindings xmlns:d9p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Process Attachment&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;BreakPointLines xmlns:d9p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;Neuron.Esb.Mail.Attachment attachment = (Neuron.Esb.Mail.Attachment)context.Properties["Attachment"];

ESBMessage msg = new ESBMessage(attachment.Content);
context.Instance.TraceInformation(msg.ToString());

context.Data = msg;
context.Data.SetProperty("Attachment", "CharacterSet", attachment.CharacterSet);
context.Data.SetProperty("Attachment", "ContentType", attachment.ContentType);
context.Data.SetProperty("Attachment", "Encoding", attachment.Encoding);
context.Data.SetProperty("Attachment", "Length", attachment.Length.ToString());
context.Data.SetProperty("Attachment", "Name", attachment.Name);

context.Data.SetProperty("file_out", "Name", attachment.Name);

// If you want to write the attachment directly to a file:
//System.IO.File.WriteAllBytes(@"C:\FileOut\" + attachment.Name, attachment.Content); &lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d9p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d9p1:string&gt;Neuron&lt;/d9p1:string&gt;&lt;d9p1:string&gt;Neuron.Pipelines&lt;/d9p1:string&gt;&lt;d9p1:string&gt;Neuron.Esb&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;d9p1:string&gt;System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d9p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Type8cf5b1b6e6443d9b609baf078f8f70&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d8p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d8p1:EsbMessagePublishPipelineStep"&gt;&lt;Bindings xmlns:d9p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Publish&lt;/Name&gt;&lt;Uniquename i:nil="true" /&gt;&lt;d8p1:Semantic&gt;Multicast&lt;/d8p1:Semantic&gt;&lt;d8p1:TopicSelector i:type="d8p1:ESBMessageConstTopicSelector"&gt;&lt;d8p1:Topic&gt;Email&lt;/d8p1:Topic&gt;&lt;/d8p1:TopicSelector&gt;&lt;d8p1:_timeout&gt;0&lt;/d8p1:_timeout&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;CollectionPropertyName&gt;EmailAttachments&lt;/CollectionPropertyName&gt;&lt;ItemPropertyName&gt;Attachment&lt;/ItemPropertyName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Try&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Steps&gt;&lt;/ESBMessagePipeline&gt;</PipelineBlob>
</ESBMessagePipelineStorage>